# raf/core.py
class EvidenceItem:  # tiered references for claims
    tier: str        # "Scripture" | "Primary" | "Secondary" | "Heuristic"
    source: str
    notes: str | None

class Evidence:
    def __init__(self, required_tiers: list[str] | None = None): ...

class RecursionGuard:
    def __init__(self, max_turns=5, checkpoint_on: str | None = None): ...
    def tick(self, state): ...
    @property
    def events(self) -> list: ...

class Reasoner:
    def __init__(self, modes: list[str], guard: RecursionGuard, zealoty_filter=True): ...
    def ask(self, prompt: str, evidence: Evidence | None = None):
        """Returns an object with .text, .evidence, .metadata"""

# Optional: mode adapters
class Builder: ...
class Researcher: ...
class Critic: ...
class Counselor: ...
